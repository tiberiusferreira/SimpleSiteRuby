var map ;

var markers = [];
var distanceSelect = document.getElementById("distanceSelect")
var distance = 10;
var latitude;
var longitude;
var shops = <%= raw @shops.to_json %>;

function sortShopsDist(userLat, userLong){
  shops.sort(function(a, b) {
      return parseFloat(getDistanceFromLatLonInKm(a.latitude, a.longitude, userLat, userLong)
    ) - parseFloat(getDistanceFromLatLonInKm(b.latitude, b.longitude, userLat, userLong));
  });
}
function ok(){
  y.innerHTML = "ok";
}

distanceSelect.onchange = function() {
  //change the tag innerHTML checking the selected value of the select
  distance = distanceSelect.value
  for (var i = 0; i < markers.length; i++) {
    markers[i].setMap(null);
  }
  filterMarkers(distance)
}

numberSelect.onchange = function() {
  //change the tag innerHTML checking the selected value of the select
  distance = numberSelect.value
  for (var i = 0; i < markers.length; i++) {
    markers[i].setMap(null);
  }
  filterMarkersNumber(distance)
}

var x = document.getElementById("demo");
var y = document.getElementById("demo2");


// x.innerHTML = shops[0]




// In the following example, markers appear when the user clicks on the map.
// Each marker is labeled with a single alphabetical character.
function getDistanceFromLatLonInKm(lat1,lon1,lat2,lon2) {
  var R = 6371; // Radius of the earth in km
  var dLat = deg2rad(lat2-lat1);  // deg2rad below
  var dLon = deg2rad(lon2-lon1);
  var a =
  Math.sin(dLat/2) * Math.sin(dLat/2) +
  Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *
  Math.sin(dLon/2) * Math.sin(dLon/2)
  ;
  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
  var d = R * c; // Distance in km
  return d;
}

function deg2rad(deg) {
  return deg * (Math.PI/180)
}
function initialize(position) {
  latitude = position.coords.latitude;
  longitude = position.coords.longitude;
  sortShopsDist(latitude, longitude);
  var home = { lat: latitude, lng: longitude };
  map = new google.maps.Map(document.getElementById('map'), {
    zoom: 12,
    center: home
  });
  // This event listener calls addMarker() when the map is clicked.
  google.maps.event.addListener(map, 'click', function(event) {
    // addMarker(event.latLng, map);
  });

  // Add a marker at the center of the map.
  filterMarkers(5)

}

function filterMarkers(distance){
  <% @shops.each do |shop| %>
  var shoplat = <%= shop.latitude %>
  var shoplong = <%= shop.longitude %>
  dist = getDistanceFromLatLonInKm(shoplat, shoplong, latitude, longitude)
  if( dist < distance ){
    addMarker({lat: <%= shop.latitude %>, lng:<%= shop.longitude %>}, map,'<%= shop.name %>');
  }
  <% end %>
}

function filterMarkersNumber(number){
  for (var i = 0; i < number && shops.length > i; i++) {
      addMarker({lat: shops[i].latitude, lng:shops[i].longitude}, map,shops[i].name);
      
  }

}
// Adds a marker to the map.
function addMarker(location, map, name) {
  // Add the marker at the clicked location, and add the next-available label
  // from the array of alphabetical characters.
  var marker = new google.maps.Marker({
    position: location,
    title: name,
    map: map
  });
  markers.push(marker);
}
